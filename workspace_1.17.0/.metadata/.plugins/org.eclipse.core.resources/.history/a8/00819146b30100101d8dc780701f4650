/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif


#include<stdint.h>
#include<stdio.h>

int main(void)
{
	// 1. Enable all Conf System Exceptions

	uint32_t *pSHCSR = (uint32_t*)0xE000ED24;

	*pSHCSR |=(1<<16);	//Mem manage
	*pSHCSR |=(1<<17);	//Bus Fault
	*pSHCSR |=(1<<18);	//Usage Fault

	uint32_t v = 16/0;

	// 3. Force the processor to execute undefined system exceptions

	uint32_t *pSRAM= (uint32_t*)0x20010001;
	*pSRAM=0xFFFFFFFF;

	void(*add)(void);
	add = (void*)(uint32_t) pSRAM;
	add();

    /* Loop forever */
	for(;;);


}


	// 2. Implement the Fault Handlers
void HardFault_Handler(void)
{
	printf("HardFault_Handler ISR Raised");
	while(1);

}

void MemManage_Handler(void)
{
	printf("MemManage_Handler ISR Raised");

	while(1);
}

void BusFault_Handler(void)
{
	printf("BusFault_Handler ISR Raised");
	while(1);
}

void UsageFault_Handler(void)
{
	printf("UsageFault_Handler ISR Raised");
	while(1);
}



